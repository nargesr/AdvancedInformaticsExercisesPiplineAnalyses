panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(aes(x=0, y=rep(0), fill="Female"), color="green") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(data, aes(x=Time, y=rep(0, 6), fill="Female"), color="green") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(data = data, aes(x=Time, y=rep(0, 6), fill="Female"), color="green") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(data = data, aes(x=Time, y=rep(0, 6), fill=rep("Female", 6)), color="green") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
rlang::last_error()
dev.off()
dev.off()
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(data = data, aes(x=Time, y=rep(0, 6), fill=rep("Female", 6)), color="green") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink", "Female" = "green")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(data = data, aes(x=Time, y=rep(0, 6), fill=rep("Female", 6)), color="green") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
dev.off()
i
i
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink", "Female" = "green")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(data = data, aes(x=Time, y=rep(0, 6), fill=rep("Female", 6)), color="green") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink", "Female" = "green")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(data = data, aes(x=Time, y=rep(0, 6), fill=rep("Female", 6))) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink", "Female" = "green")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=6) +
geom_point(aes(x=0, y=0, fill="Female")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink", "Female" = "green")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=5.5) +
geom_point(aes(x=0, y=0, fill="Female")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink", "Female" = "green")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=5) +
geom_point(aes(x=0, y=0, fill="Female")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink", "Female" = "green")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=5) +
#geom_point(aes(x=0, y=0, fill="Female")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink",
"Female" = "green",
"4 month" = "cyan", "12 month" = "deepskyblue", "18 month" = "darkblue",
"Hippocampus" = "deeppink")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=5) +
geom_point(aes(x=0, y=0, fill="Female")) +
geom_point(aes(x=0, y=0, fill="Hippocampus")) +
geom_point(aes(x=0, y=0, fill="4 month")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
pdf("fig1A.pdf", width = 6, height = 2)
plot = ggplot(data, aes(x=Time, y=counts, fill=Genotype)) +
geom_bar(stat="identity", position="dodge2") +
scale_fill_manual(values = c("3xTgADHO" = "purple", "3xTgADWT" = "lightpink",
"Female" = "green",
"4 month" = "cyan", "12 month" = "deepskyblue", "18 month" = "darkblue",
"Hippocampus" = "deeppink")) +
coord_flip() +
theme_classic() +
geom_text(aes(label=counts), hjust=-0.5, color="black",
position = position_dodge(0.9), size=5) +
geom_point(aes(x=0, y=0, fill="Female")) +
geom_point(aes(x=0, y=0, fill="Hippocampus")) +
geom_point(aes(x=0, y=0, fill="4 month")) +
geom_point(aes(x=0, y=0, fill="12 month")) +
geom_point(aes(x=0, y=0, fill="18 month")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_text(colour="black", size = 16),
axis.title=element_text(size = 18, face = "bold"),
legend.text=element_text(colour="black", size = 16),
legend.title=element_text(colour="black", size = 16))
print(plot)
dev.off()
library(WGCNA)
library(RColorBrewer)
library(Hmisc)
library("ComplexHeatmap")
options(stringsAsFactors = FALSE);
###----------------------
## ANALYSING
print("Analysing")
load(file = "Data/data_input.RData");
datTraits = read.csv('Data/datTraits_3xTgAD_hipp_female', sep = ',', stringsAsFactors = FALSE);
load(file = "Data/Data-networkConstruction.RData");
annot = read.csv('../../../Data/geneList', sep = '\t', stringsAsFactors = FALSE);
# Define numbers of genes and samples
nGenes = ncol(datExpr);
nSamples = nrow(datExpr);
# Recalculate MEs with color labels
datME = moduleEigengenes(datExpr, moduleColors)$eigengenes
datME$MEgrey = NULL
MEs = orderMEs(datME)
moduleTraitCor = cor(MEs, datTraits, use = "p");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples);
### For paper
moduleTraitCor = moduleTraitCor[c(3,4,12,10,7,2,6,13,5,15,11,9,14,8,1),]
moduleTraitPvalue = moduleTraitPvalue[c(3,4,12,10,7,2,6,13,5,15,11,9,14,8,1),]
## names
xlabels = c("4 month", "12 month", "18 month", "3xTgADHO", "3xTgADWT")
ylabels = c()
for (label in rownames(moduleTraitCor)) {
ylabels = c(ylabels, substr(label, 3, 10000))
}
ylabels = capitalize(ylabels)
## Quantifying module-trait associations
pdf(file = "Module-traitRelationships.pdf", width = 10, height = 8);
# Will display correlations and their p-values
textMatrix = paste(signif(moduleTraitCor, 2), "\n(",
signif(moduleTraitPvalue, 1), ")", sep = "");
dim(textMatrix) = dim(moduleTraitCor)
par(mar = c(5, 8, 0.5, 2));
# Display the correlation values within a heatmap plot
labeledHeatmap(Matrix = moduleTraitCor,
xLabels = xlabels,
yLabels = ylabels,
ySymbols = rownames(moduleTraitCor),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix,
setStdMargins = FALSE,
cex.text = 1,
zlim = c(-1,1),
cex.lab = 1,
font.lab.x = 2,
font.lab.y = 10,
main = "")
dev.off();
library(WGCNA)
library(RColorBrewer)
library(Hmisc)
library("ComplexHeatmap")
options(stringsAsFactors = FALSE);
load(file = "Data/data_input.RData");
datTraits = read.csv('Data/datTraits_3xTgAD_hipp_female', sep = ',', stringsAsFactors = FALSE);
load(file = "Data/Data-networkConstruction.RData");
annot = read.csv('../../../Data/geneList', sep = '\t', stringsAsFactors = FALSE);
# Define numbers of genes and samples
nGenes = ncol(datExpr);
nSamples = nrow(datExpr);
# Recalculate MEs with color labels
datME = moduleEigengenes(datExpr, moduleColors)$eigengenes
datME$MEgrey = NULL
MEs = orderMEs(datME)
moduleTraitCor = cor(MEs, datTraits, use = "p");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples);
### For paper
moduleTraitCor = moduleTraitCor[c(12,3,4,10,7,2,6,13,5,15,11,9,14,8,1),]
moduleTraitPvalue = moduleTraitPvalue[c(12,3,4,10,7,2,6,13,5,15,11,9,14,8,1),]
## names
xlabels = c("4 month", "12 month", "18 month", "3xTgADHO", "3xTgADWT")
ylabels = c()
for (label in rownames(moduleTraitCor)) {
ylabels = c(ylabels, substr(label, 3, 10000))
}
ylabels = capitalize(ylabels)
## Quantifying module-trait associations
pdf(file = "Module-traitRelationships.pdf", width = 10, height = 8);
# Will display correlations and their p-values
textMatrix = paste(signif(moduleTraitCor, 2), "\n(",
signif(moduleTraitPvalue, 1), ")", sep = "");
dim(textMatrix) = dim(moduleTraitCor)
par(mar = c(5, 8, 0.5, 2));
# Display the correlation values within a heatmap plot
labeledHeatmap(Matrix = moduleTraitCor,
xLabels = xlabels,
yLabels = ylabels,
ySymbols = rownames(moduleTraitCor),
colorLabels = FALSE,
colors = blueWhiteRed(50),
textMatrix = textMatrix,
setStdMargins = FALSE,
cex.text = 1,
zlim = c(-1,1),
cex.lab = 1,
font.lab.x = 2,
font.lab.y = 10,
main = "")
dev.off();
library(WGCNA)
library(RColorBrewer)
library(Hmisc)
library("ComplexHeatmap")
options(stringsAsFactors = FALSE);
load(file = "Data/data_input.RData");
datTraits = read.csv('Data/datTraits_3xTgAD_hipp_female', sep = ',', stringsAsFactors = FALSE);
load(file = "Data/TOM.RData");
load(file = "Data/Data-networkConstruction.RData");
annot = read.csv('../../../Data/geneList', sep = '\t', stringsAsFactors = FALSE);
# Define numbers of genes and samples
nGenes = ncol(datExpr);
nSamples = nrow(datExpr);
# Recalculate MEs with color labels
datME = moduleEigengenes(datExpr, moduleColors)$eigengenes
datME$MEgrey = NULL
MEs = orderMEs(datME)
moduleTraitCor = cor(MEs, datTraits, use = "p");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples);
## Diagnostics: displaying module heatmap and the eigengene
## Add color bar
month = rep(0, dim(datExpr)[1])
tissue = rep("Hippocampus", dim(datExpr)[1])
sex = rep("Male", dim(datExpr)[1])
mouseLine = rep("5XfAD;BL6", dim(datExpr)[1])
for (i in c(1:dim(datExpr)[1])) {
tmp = strsplit(row.names(datExpr)[i], "_")[[1]]
if (tmp[4] == "cortex"){
tissue[i] = "Cortex"
}
if (tmp[2] == "Female"){
sex[i] = "Female"
}
if (tmp[3] == "3xTgADWT"){
mouseLine[i] = "3xTgADWT"
}
if (tmp[3] == "3xTgADHO"){
mouseLine[i] = "3xTgADHO"
}
if (tmp[1] == "X4mon"){
month[i] = "4 month"
}
if (tmp[1] == "X8mon"){
month[i] = "8 month"
}
if (tmp[1] == "X12mon"){
month[i] = "12 month"
}
if (tmp[1] == "X18mon"){
month[i] = "18 month"
}
}
## Plot module heatmap eigen gene
modules = names(table(moduleColors))
modules = modules[modules != "grey"]
modules
which.module = "paleturquoise"
# Recalculate MEs with color labels
label = t(scale(datExpr[, moduleColors==which.module]))
colnames(label) = paste0("sample_", seq(ncol(label)))
ME=datME[, paste("ME",which.module, sep="")]
for (i in c(1:length(row.names(label)))) {
index = which(row.names(label)[i] == annot$Gene.ID)
if (length(index) != 0) {
if (annot$Gene.Symbol[index] %in% c("Cst7", "Gfap", "Apoe", "Trem2", "Thy1", "Gm4924", "Gas5", "Tyrobp", "Ctsz", "Ccl6", "Ctss")) {
row.names(label)[i] = annot$Gene.Symbol[index]
}
else {
row.names(label)[i] = ""
}
} else {
row.names(label)[i] = ""
}
}
ME
max(ME)
ME[22]
head(label)
head[,22]
label[,22]
datME[, 22]
View(datME)
View(datME)
# Recalculate MEs with color labels
label = t(scale(datExpr[, moduleColors==which.module]))
label[, 22]
colnames(label)[22]
